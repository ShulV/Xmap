{
	"info": {
		"_postman_id": "d44dea8e-2646-4487-a974-64e01463fb28",
		"name": "Xmap request collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24380256",
		"_collection_link": "https://www.postman.com/dark-resonance-26047/workspace/loc1/collection/24380256-d44dea8e-2646-4487-a974-64e01463fb28?action=share&source=collection_link&creator=24380256"
	},
	"item": [
		{
			"name": "auth management",
			"item": [
				{
					"name": "register user ANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"// Сохраняем access_token в переменной среды \"jwt_token\"\r",
									"pm.collectionVariables.set(\"jwt_token\", jsonData.access_token);\r",
									"\r",
									"// Сохраняем refresh_token в переменной среды \"refresh_token\"\r",
									"pm.collectionVariables.set(\"refresh_token\", jsonData.refresh_token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{test_username}}\",\r\n    \"email\": \"{{test_email}}\",\r\n    \"phoneNumber\": \"{{test_phone_number}}\",\r\n    \"birthday\": \"{{test_birthday}}\",\r\n    \"password\": \"{{test_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_api_v1}}/auth/register",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "correct",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{test_username}}\",\r\n    \"email\": \"{{test_email}}\",\r\n    \"phoneNumber\": \"{{test_phone_number}}\",\r\n    \"birthday\": \"{{test_birthday}}\",\r\n    \"password\": \"{{test_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_url}}/v1/auth/register",
									"host": [
										"{{api_url}}"
									],
									"path": [
										"v1",
										"auth",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "correct2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Victor\",\r\n    \"email\": \"vshulpov@gmail.com\",\r\n    \"phoneNumber\": \"89963045040\",\r\n    \"birthday\": \"2001-07-14\",\r\n    \"password\": \"12345678\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_url}}/v1/auth/register",
									"host": [
										"{{api_url}}"
									],
									"path": [
										"v1",
										"auth",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "incorrect",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"я\",\r\n    \"email\": \"bad_email.ru\",\r\n    \"phoneNumber\": \"32\",\r\n    \"birthday\": \"2025-12-20\",\r\n    \"password\": \"12\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_url}}/v1/auth/register",
									"host": [
										"{{api_url}}"
									],
									"path": [
										"v1",
										"auth",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "login user ANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Парсим JSON-ответ от сервера\r",
									"pm.globals.get(\"variable_key\");\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Сохраняем access_token в переменной среды \"jwt_token\"\r",
									"pm.collectionVariables.set(\"jwt_token\", jsonData.access_token);\r",
									"\r",
									"// Сохраняем refresh_token в переменной среды \"refresh_token\"\r",
									"pm.collectionVariables.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"accept-encoding": true,
							"accept": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{test_email}}\",\r\n    \"password\": \"{{test_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_api_v1}}/auth/authenticate",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "correct",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{test_email}}\",\r\n    \"password\": \"{{test_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_url}}/v1/auth/authenticate",
									"host": [
										"{{api_url}}"
									],
									"path": [
										"v1",
										"auth",
										"authenticate"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "incorrect password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{test_email}}\",\r\n    \"password\": \"{{test_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_url}}/v1/auth/authenticate",
									"host": [
										"{{api_url}}"
									],
									"path": [
										"v1",
										"auth",
										"authenticate"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "incorrect login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{test_email}}\",\r\n    \"password\": \"{{test_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_url}}/v1/auth/authenticate",
									"host": [
										"{{api_url}}"
									],
									"path": [
										"v1",
										"auth",
										"authenticate"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "refresh token USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Парсим JSON-ответ от сервера\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Сохраняем access_token в переменной среды \"jwt_token\"\r",
									"pm.collectionVariables.set(\"jwt_token\", jsonData.access_token);\r",
									"\r",
									"// Сохраняем refresh_token в переменной среды \"refresh_token\"\r",
									"pm.collectionVariables.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"user-agent": true,
							"accept-encoding": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Refresh {{refresh_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/auth/refresh-token",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Удалим refresh_token из переменной среды \"refresh_token\"\r",
									"pm.collectionVariables.set(\"refresh_token\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"accept": true,
							"accept-encoding": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Refresh eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ2c2h1bHBvdkBnbWFpbC5jb20iLCJpYXQiOjE2OTgxNTYxNjQsImV4cCI6MTY5ODc2MDk2NH0.V8x30-PXJXVghQv-i-3HssRB1Tt5y-im40MGeipwpd4",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/auth/logout",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout all USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Удалим refresh_token из переменной среды \"refresh_token\"\r",
									"pm.collectionVariables.set(\"refresh_token\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Refresh {{refresh_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/auth/logout-all",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"auth",
								"logout-all"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "user image",
			"item": [
				{
					"name": "upload user image USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Id key exists\", function () {  \r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData).to.has.property(\"id\");\r",
									"\r",
									"    pm.collectionVariables.set(\"created_user_image_id\", jsonData.id);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"accept-encoding": true,
							"accept": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"contentType": "",
									"type": "file",
									"src": "/C:/Users/Victor/Downloads/vue-icon-2048x1766-ntogpmti.png"
								}
							]
						},
						"url": {
							"raw": "{{base_api_v1}}/image-service/user-image",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"image-service",
								"user-image"
							]
						}
					},
					"response": []
				},
				{
					"name": "download user image ANY",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/image-service/user-image/{{created_user_image_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"image-service",
								"user-image",
								"{{created_user_image_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user image USER+",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/image-service/user-image/{{created_user_image_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"image-service",
								"user-image",
								"{{created_user_image_id}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "spots",
			"item": [
				{
					"name": "all spots ANY",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true,
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_api_v1}}/spots/all",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "send to moderation USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Id key exists\", function () {  \r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData).to.has.property(\"id\");\r",
									"\r",
									"    pm.collectionVariables.set(\"created_spot_id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files",
									"contentType": "",
									"type": "file",
									"src": [
										"/C:/Users/Victor/Downloads/10-12spring.png",
										"/C:/Users/Victor/Downloads/girlianda_ukrashenie_novyj_god_154884_3840x2400.jpg"
									]
								},
								{
									"key": "spotDto",
									"value": "{{json_for_spot_creating}}",
									"contentType": "application/json",
									"type": "text"
								},
								{
									"key": "spotDto",
									"value": "{{json_for_spot_creating_incorrect}}",
									"contentType": "application/json",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_api_v1}}/spots/moderation",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots",
								"moderation"
							]
						}
					},
					"response": []
				},
				{
					"name": "spots in radius USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_api_v1}}/spots/in-radius?lat={{test_barnaul_lat}}&lon={{test_barnaul_lon}}&radius={{test_radius_for_spot_search}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots",
								"in-radius"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{test_barnaul_lat}}"
								},
								{
									"key": "lon",
									"value": "{{test_barnaul_lon}}"
								},
								{
									"key": "radius",
									"value": "{{test_radius_for_spot_search}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "favorite spots by token USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"user-agent": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/spots/favorite",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots",
								"favorite"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "comments",
			"item": [
				{
					"name": "add comment USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Id key exists\", function () {  \r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData).to.has.property(\"id\");\r",
									"\r",
									"    pm.collectionVariables.set(\"created_comment_id\", jsonData.id);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"Текст коммента 1.....{{$randomProduct}}.....\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_api_v1}}/comments/add-comment-by-spot-id/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"comments",
								"add-comment-by-spot-id",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "spot comments ANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_api_v1}}/comments/get-by-spot-id/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"comments",
								"get-by-spot-id",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete comment by id USER+",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true,
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/comments/{{created_comment_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"comments",
								"{{created_comment_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "spot image",
			"item": [
				{
					"name": "upload spot image MODER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Id key exists\", function () {  \r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData).to.has.property(\"id\");\r",
									"\r",
									"    pm.collectionVariables.set(\"created_spot_image_id\", jsonData.id);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Victor/Downloads/10-12spring.png"
								}
							]
						},
						"url": {
							"raw": "{{base_api_v1}}/image-service/spot-image/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"image-service",
								"spot-image",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "download spot image ANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_api_v1}}/image-service/spot-image/{{created_spot_image_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"image-service",
								"spot-image",
								"{{created_spot_image_id}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "likes/ratings/favorites",
			"item": [
				{
					"name": "change favorite state USER+",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/spots-users/favorite-state/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots-users",
								"favorite-state",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "change like state USER+",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/spots-users/like-state/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots-users",
								"like-state",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ONLY FOR TEST like number by spot id ANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"connection": true,
							"accept-encoding": true,
							"accept": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_api_v1}}/spots-users/like-number/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots-users",
								"like-number",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ONLY FOR TEST favorite number by spot id ANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"accept-encoding": true,
							"accept": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_api_v1}}/spots-users/favorite-number/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots-users",
								"favorite-number",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ONLY FOR TEST info by user and spot id ANY",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"accept-encoding": true,
							"accept": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/spots-users/info/{{created_spot_id}}",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"spots-users",
								"info",
								"{{created_spot_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "reference_info ANY",
			"item": [
				{
					"name": "space type",
					"item": [
						{
							"name": "all space types ANY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Space types are right\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedJson = [\r",
											"    {\r",
											"        \"id\": 1,\r",
											"        \"name\": \"крытое помещение\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 2,\r",
											"        \"name\": \"под навесом\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 3,\r",
											"        \"name\": \"под открытым небом\"\r",
											"    }\r",
											"];\r",
											"\r",
											"    pm.expect(jsonData).to.eql(expectedJson);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"user-agent": true,
									"accept": true,
									"accept-encoding": true,
									"connection": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/space-types/all",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"space-types",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id ANY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"connection": true,
									"accept-encoding": true,
									"accept": true,
									"user-agent": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/space-types/{{space_type_id}}",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"space-types",
										"{{space_type_id}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "sport type",
					"item": [
						{
							"name": "all sport types ANY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Sport types are right\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedJson = [\r",
											"    {\r",
											"        \"id\": 1,\r",
											"        \"name\": \"bmx-фристайл\",\r",
											"        \"transportName\": \"bmx\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 2,\r",
											"        \"name\": \"скейтбординг\",\r",
											"        \"transportName\": \"скейтборд\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 3,\r",
											"        \"name\": \"самокат-фристайл\",\r",
											"        \"transportName\": \"самокат\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 4,\r",
											"        \"name\": \"горный велоспорт\",\r",
											"        \"transportName\": \"MTB\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 5,\r",
											"        \"name\": \"роллер-спорт\",\r",
											"        \"transportName\": \"ролики\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 6,\r",
											"        \"name\": \"лыжный спорт\",\r",
											"        \"transportName\": \"лыжи\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 7,\r",
											"        \"name\": \"сноубординг\",\r",
											"        \"transportName\": \"сноуборд\"\r",
											"    }\r",
											"];\r",
											"\r",
											"    pm.expect(jsonData).to.eql(expectedJson);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"user-agent": true,
									"accept": true,
									"accept-encoding": true,
									"connection": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/sport-types/all",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"sport-types",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id ANY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"user-agent": true,
									"accept": true,
									"accept-encoding": true,
									"connection": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/sport-types/{{sport_type_id}}",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"sport-types",
										"{{sport_type_id}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "spot type",
					"item": [
						{
							"name": "all spot types ANY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Spot types are right\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedJson = [\r",
											"    {\r",
											"        \"id\": 1,\r",
											"        \"name\": \"скейтпарк\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 2,\r",
											"        \"name\": \"стрит\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 3,\r",
											"        \"name\": \"дёрты\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 4,\r",
											"        \"name\": \"вёрт\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 5,\r",
											"        \"name\": \"bmx-рейсинг\"\r",
											"    },\r",
											"    {\r",
											"        \"id\": 6,\r",
											"        \"name\": \"флэтленд\"\r",
											"    }\r",
											"];\r",
											"\r",
											"    pm.expect(jsonData).to.eql(expectedJson);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept-encoding": true,
									"accept": true,
									"user-agent": true,
									"connection": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/spot-types/all",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"spot-types",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id ANY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"user-agent": true,
									"accept": true,
									"accept-encoding": true,
									"connection": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/spot-types/{{spot_type_id}}",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"spot-types",
										"{{spot_type_id}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "city/region/country",
			"item": [
				{
					"name": "cities",
					"item": [
						{
							"name": "all cities",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/cities/all",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"cities",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "cities by country id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/cities/get-by-country-id/1",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"cities",
										"get-by-country-id",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "cities by region id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/cities/get-by-region-id/1",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"cities",
										"get-by-region-id",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "countries",
					"item": [
						{
							"name": "all countries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/countries/all",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"countries",
										"all"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "regions",
					"item": [
						{
							"name": "all regions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/regions/all",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"regions",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "regions by country id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_api_v1}}/regions/get-by-country-id/1",
									"host": [
										"{{base_api_v1}}"
									],
									"path": [
										"regions",
										"get-by-country-id",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "self user",
			"item": [
				{
					"name": "user by token USER+",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/user/info",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"user",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "ONLY FOR TEST delete user by token USER+",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Сохраняем refresh_token в переменной среды \"refresh_token\"\r",
									"pm.collectionVariables.set(\"refresh_token\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_api_v1}}/user",
							"host": [
								"{{base_api_v1}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_api_v1",
			"value": "localhost:8089/api/v1"
		},
		{
			"key": "jwt_token",
			"value": "12345"
		},
		{
			"key": "test_username",
			"value": "user1_name1",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "user11@mail.ru",
			"type": "string"
		},
		{
			"key": "test_phone_number",
			"value": "89998887755",
			"type": "string"
		},
		{
			"key": "test_password",
			"value": "Qwerty",
			"type": "string"
		},
		{
			"key": "test_birthday",
			"value": "2001-07-14",
			"type": "string"
		},
		{
			"key": "remote_api_url",
			"value": "185.249.227.104:8080/api",
			"type": "string"
		},
		{
			"key": "local_api_url",
			"value": "localhost:8089/api",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "localhost:8089",
			"type": "string"
		},
		{
			"key": "created_user_image_id",
			"value": ""
		},
		{
			"key": "created_user_id",
			"value": ""
		},
		{
			"key": "authenticated_user_id",
			"value": ""
		},
		{
			"key": "created_spot_image_id",
			"value": ""
		},
		{
			"key": "sport_type_id",
			"value": "1"
		},
		{
			"key": "spot_type_id",
			"value": "1"
		},
		{
			"key": "space_type_id",
			"value": "1"
		},
		{
			"key": "json_for_spot_creating_incorrect",
			"value": "{         \"name\": \"СУПЕР СПОТ 1\",         \"latitude\": 211.12,         \"longitude\": 19.3,         \"description\": \"описание 999\",         \"spotTypeIds\": [             2         ],         \"sportTypeIds\": [             1,             2,             5         ],         \"spaceTypeId\": 1     }"
		},
		{
			"key": "json_for_spot_creating",
			"value": "{         \"name\": \"Какой-то СПОТ 2\",         \"latitude\": 151.12,         \"longitude\": 11.3,         \"description\": \"описание СПОТА 2\",         \"spotTypeIds\": [             2         ],         \"sportTypeIds\": [             1,             3,         ],         \"spaceTypeId\": 1     }"
		},
		{
			"key": "created_spot_id",
			"value": "1"
		},
		{
			"key": "test_lat",
			"value": "53.34"
		},
		{
			"key": "test_barnaul_lat",
			"value": "53.34"
		},
		{
			"key": "test_barnaul_lon",
			"value": "83.69"
		},
		{
			"key": "test_radius_for_spot_search",
			"value": "1000"
		},
		{
			"key": "created_comment_id",
			"value": ""
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		}
	]
}